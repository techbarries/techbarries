# Generated by Django 4.0.3 on 2022-06-13 18:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import places.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Age',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('age_name', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='age_created_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dress_name', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dress_created_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='event_cover/%Y/%m/%d/')),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('event_address_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('event_start_date', models.DateField(blank=True, null=True)),
                ('event_end_date', models.DateField(blank=True, null=True)),
                ('event_start_time', models.TimeField(blank=True, null=True)),
                ('event_end_time', models.TimeField(blank=True, null=True)),
                ('access_type', models.CharField(choices=[('PUBLIC', 'PUBLIC'), ('PRIVATE', 'PRIVATE')], default='PUBLIC', max_length=10, null=True)),
                ('guests_list_capacity', models.IntegerField(blank=True, default=0, null=True)),
                ('open_guests_list', models.IntegerField(blank=True, default=0, null=True)),
                ('contact_info', models.TextField(blank=True, null=True)),
                ('cover_fee', models.PositiveIntegerField(default=0, null=True)),
                ('bottle_service_fee', models.PositiveIntegerField(default=0, null=True)),
                ('boost_enabled', models.BooleanField(blank=True, default=False, help_text='Designates whether the event can boost.', verbose_name='Boost enabled')),
                ('archived', models.BooleanField(blank=True, default=False, help_text='Designates whether the event is archived or not.', verbose_name='Archived')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_event_user', to=settings.AUTH_USER_MODEL)),
                ('guests', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('food_name', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='food_created_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('music_name', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='music_created_by_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('venue_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('location', places.fields.PlacesField(blank=True, max_length=255, null=True)),
                ('price_details', models.CharField(choices=[('$', '$'), ('$$', '$$'), ('$$$', '$$$')], default='$', max_length=10, null=True, verbose_name='Price Details')),
                ('featured', models.BooleanField(blank=True, default=False, help_text='Designates whether the venue is featured or not.', verbose_name='Featured')),
                ('archived', models.BooleanField(blank=True, default=False, help_text='Designates whether the venue is archived or not.', verbose_name='Archived')),
                ('monday', models.BooleanField(blank=True, default=True)),
                ('monday_start_time', models.TimeField(blank=True, null=True)),
                ('monday_end_time', models.TimeField(blank=True, null=True)),
                ('tuesday', models.BooleanField(blank=True, default=True)),
                ('tuesday_start_time', models.TimeField(blank=True, null=True)),
                ('tuesday_end_time', models.TimeField(blank=True, null=True)),
                ('wednesday', models.BooleanField(blank=True, default=True)),
                ('wednesday_start_time', models.TimeField(blank=True, null=True)),
                ('wednesday_end_time', models.TimeField(blank=True, null=True)),
                ('thursday', models.BooleanField(blank=True, default=True)),
                ('thursday_start_time', models.TimeField(blank=True, null=True)),
                ('thursday_end_time', models.TimeField(blank=True, null=True)),
                ('friday', models.BooleanField(blank=True, default=True)),
                ('friday_start_time', models.TimeField(blank=True, null=True)),
                ('friday_end_time', models.TimeField(blank=True, null=True)),
                ('saturday', models.BooleanField(blank=True, default=True)),
                ('saturday_start_time', models.TimeField(blank=True, null=True)),
                ('saturday_end_time', models.TimeField(blank=True, null=True)),
                ('sunday', models.BooleanField(blank=True, default=True)),
                ('sunday_start_time', models.TimeField(blank=True, null=True)),
                ('sunday_end_time', models.TimeField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('ages', models.ManyToManyField(blank=True, to='events.age')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_user_venue', to=settings.AUTH_USER_MODEL)),
                ('dresses', models.ManyToManyField(blank=True, to='events.dress')),
                ('foods', models.ManyToManyField(blank=True, to='events.food')),
                ('musics', models.ManyToManyField(blank=True, to='events.music')),
                ('promoter_user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promoter_user_venue', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VenueStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('liked', models.BooleanField(blank=True, default=0, null=True)),
                ('joined', models.BooleanField(blank=True, default=0, null=True)),
                ('user_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_venue_interaction', to=settings.AUTH_USER_MODEL)),
                ('venue_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_status', to='events.venue')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VenueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='venue/%Y/%m/%d/')),
                ('is_cover', models.CharField(choices=[('True', 'Yes'), ('False', 'No')], default='False', max_length=10, null=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_images', to='events.venue')),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('university_name', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('university_picture', models.ImageField(blank=True, upload_to='university/%Y/%m/%d/')),
                ('archived', models.BooleanField(blank=True, default=False, help_text='Designates whether the university is archived or not.', verbose_name='Archived')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_user_uni', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Universities',
            },
        ),
        migrations.CreateModel(
            name='RequestVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_requested_venue', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Requested Venues',
            },
        ),
        migrations.CreateModel(
            name='MenuImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='menu/%Y/%m/%d-%h:%i/')),
                ('is_cover', models.CharField(choices=[('True', 'Yes'), ('False', 'No')], default='False', max_length=10, null=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_menu_images', to='events.venue')),
            ],
        ),
        migrations.CreateModel(
            name='EventStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hosted', models.BooleanField(blank=True, default=0, null=True)),
                ('checked_in', models.BooleanField(blank=True, default=0, null=True)),
                ('pinned', models.BooleanField(blank=True, default=0, null=True)),
                ('paid', models.BooleanField(blank=True, default=0, null=True)),
                ('guest_list', models.BooleanField(blank=True, default=0, null=True)),
                ('invited', models.BooleanField(blank=True, default=0, null=True)),
                ('joined', models.BooleanField(blank=True, default=0, null=True)),
                ('going', models.BooleanField(blank=True, default=0, null=True)),
                ('liked', models.BooleanField(blank=True, default=0, null=True)),
                ('public', models.BooleanField(blank=True, default=0, null=True)),
                ('not_going', models.BooleanField(blank=True, default=0, null=True)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_status', to='events.event')),
                ('user_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_event_interaction', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='event/%Y/%m/%d/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_images', to='events.event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='university_campus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='university_campus', to='events.university'),
        ),
        migrations.AddField(
            model_name='event',
            name='user_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_event', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_venue_name', to='events.venue'),
        ),
    ]
