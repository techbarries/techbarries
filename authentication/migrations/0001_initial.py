# Generated by Django 4.0.3 on 2022-06-13 18:18

import authentication.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(blank=True, default=None, error_messages={'unique': 'A user with that username already exists.'}, max_length=150, null=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('uid', models.CharField(blank=True, max_length=150, verbose_name='uid')),
                ('user_token', models.TextField(blank=True, default=None, null=True, verbose_name='user token')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('profile_picture_url', models.CharField(blank=True, max_length=250, verbose_name='profile picture url')),
                ('profile_picture_image', models.ImageField(blank=True, null=True, upload_to='profile/%Y/%m/%d/')),
                ('phone_number', models.CharField(blank=True, max_length=50, verbose_name='phone number')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, verbose_name='Job Title')),
                ('degree_title', models.CharField(blank=True, max_length=100, verbose_name='Degree Title')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('profile_access_type', models.CharField(choices=[('PUBLIC', 'PUBLIC'), ('PRIVATE', 'PRIVATE')], default='PUBLIC', max_length=10, null=True)),
                ('user_type', models.CharField(choices=[('REGULAR', 'REGULAR'), ('PROMOTER', 'PROMOTER'), ('VENUE_OWNER', 'VENUE_OWNER'), ('PULSE_ADMIN', 'PULSE_ADMIN')], default='REGULAR', max_length=50, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', authentication.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SmsOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.IntegerField()),
                ('otp', models.IntegerField(null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('counter', models.IntegerField(default=0, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_name', models.CharField(blank=True, max_length=255)),
                ('fcm_token', models.CharField(blank=True, max_length=255)),
                ('os', models.CharField(blank=True, max_length=255)),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_user', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
